apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.trsoft.catmovie"
        minSdkVersion 22
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }

    }
    buildTypes {
        buildTypes {
            debug {
                minifyEnabled false
                signingConfig signingConfigs.debug
            }

            release {
                minifyEnabled false
                signingConfig signingConfigs.debug
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }
    //android studio默认so文件加载目录为:src/main/jniLibs
    //如在module的build.gradle按照如下方式,自定义了so文件加载目录请确保对应目录下只有armeabi目录
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    repositories {
        flatDir {
            dirs 'libs' //就是你放aar的目录地址
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-vector-drawable:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'com.youth.banner:banner:1.4.10'
    compile 'com.makeramen:roundedimageview:2.2.1'
    implementation files('libs/MobCommons-2018.0418.1102.jar')
    implementation files('libs/MobTools-2018.0419.1211.jar')
    implementation files('libs/SDKWrapper-2018.0201.1609.jar')
    implementation files('libs/SMSSDK-3.1.1.jar')
    implementation project(':lib')
    compile 'com.alibaba:arouter-api:1.3.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    compile 'com.gyf.barlibrary:barlibrary:2.3.0'
    //1.1.0 API改动过大，老用户升级需谨慎
    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-14'
    //完整版引入
    //    implementation 'com.shuyu:GSYVideoPlayer:6.0.1'
    //    compile 'com.github.ctiao:DanmakuFlameMaster:0.9.25'
    //    compile 'com.github.ctiao:ndkbitmap-armv7a:0.9.21'
    //    implementation 'com.shuyu:gsyVideoPlayer-java:6.0.1'
    //
    ////是否需要ExoPlayer模式
    //    implementation 'com.shuyu:GSYVideoPlayer-exo2:6.0.1'
    //
    ////根据你的需求ijk模式的so
    //    implementation 'com.shuyu:gsyVideoPlayer-armv5:6.0.1'
    //    implementation 'com.shuyu:gsyVideoPlayer-armv7a:6.0.1'
    //    implementation 'com.shuyu:gsyVideoPlayer-arm64:6.0.1'
    //    implementation 'com.shuyu:gsyVideoPlayer-x64:6.0.1'
    implementation 'com.shuyu:gsyVideoPlayer-x86:6.0.1'
    //    compile 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-14'//没有使用特殊Header，可以不加这行
    //    compile 'com.android.support:appcompat-v7:25.3.1'//版本 23以上（必须）
    compile(name: 'LiteAVSDK_Player_5.2.5541', ext: 'aar')
        compile(name: 'lib_tcsuperplayer', ext: 'aar')
    // 超级播放器弹幕集成的第三方库
    compile 'com.github.ctiao:DanmakuFlameMaster:0.5.3'

}
